plugins {
	id 'java'
	id 'jacoco'
}

group = 'jp.co.canon.cks.eec.fs'
sourceCompatibility = '1.8'

String git_rev = 'git rev-parse --verify --long HEAD'.execute().text.trim();

jar {
	archiveFileName = "ELogCollector.jar"

	from {
		configurations.runtimeClasspath.collect{
			it.isDirectory() ? it : zipTree(it)
		}
	} {
		exclude "META-INF/NOTICE.txt"
		exclude "META-INF/LICENSE.txt"
	}
	manifest {
		attributes("Implementation-Version": project.version)
		attributes("GIT-REV": git_rev)
	}
}

compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile){
	options.encoding = 'UTF-8'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'commons-net:commons-net:3.6'
	implementation 'commons-cli:commons-cli:1.4'
	implementation 'org.slf4j:slf4j-api:1.7.25'
	implementation 'ch.qos.logback:logback-core:1.2.3'
	implementation 'ch.qos.logback:logback-classic:1.2.3'
	implementation 'commons-io:commons-io:2.7'
	compileOnly 'org.projectlombok:lombok:1.18.12'
	annotationProcessor 'org.projectlombok:lombok:1.18.12'
	// https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
	testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.6.2'
	// https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-engine
	testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.6.2'
}

task jarcopy(type:Copy, dependsOn: [
		jar
]) {
	from "build/libs/ELogCollector.jar"
	into "D:/usr/local/canon/esp/CanonFileService/Libs"
}

test {
	useJUnitPlatform()
}

test {
	finalizedBy jacocoTestReport
}

jacoco {
	toolVersion = '0.8.5'
}

jacocoTestReport {
	dependsOn test

	reports {
		html.enabled true
		xml.enabled false
		csv.enabled false

		html.destination file("$buildDir/jacocoHtml")
	}

	afterEvaluate {
		classDirectories.from = files(classDirectories.files.collect {
			fileTree(
					dir: it,
					exclude: [
							"jp/co/canon/cks/ees/service/**",
					])
		})
	}
}
