plugins {
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'java'
    id 'war'
    id 'jacoco'
}

group = 'jp.co.canon.cks.eec.fs'
sourceCompatibility = '1.8'

String git_rev = 'git rev-parse --verify --long HEAD'.execute().text.trim();

bootWar {
    archiveFileName = "fsm.war"
    manifest {
        attributes("Implementation-Version": project.version)
        attributes("GIT-REV": git_rev)
    }
}

configurations {
    developmentOnly
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation project(':fileservicecommon')
    implementation project(':fileservicecommonweb')
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

test {
    useJUnitPlatform()
}

test {
    finalizedBy jacocoTestReport
}

jacoco {
    toolVersion = '0.8.5'
}

jacocoTestReport {
    dependsOn test

    reports {
        html.enabled true
        xml.enabled false
        csv.enabled false

        html.destination file("$buildDir/jacocoHtml")
    }

    afterEvaluate {
        classDirectories.from = files(classDirectories.files.collect {
            fileTree(
                    dir: it,
                    exclude: [
                            "jp/co/canon/ckbs/eec/fs/manage/FileservicemanageApplication.*",
                            "jp/co/canon/ckbs/eec/fs/manage/ServletInitializer.*"
                    ])
        })
    }
}