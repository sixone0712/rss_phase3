plugins {
    id 'java'
    id 'jacoco'
}

group = 'jp.co.canon.cks.eec.fs'
sourceCompatibility = '1.8'

compileJava.options.encoding = "UTF-8"
tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'com.fasterxml.jackson.core:jackson-core:2.11.0'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.11.0'
    implementation 'com.fasterxml.jackson.core:jackson-annotations:2.11.0'
    implementation 'org.slf4j:slf4j-api:1.7.30'
    testCompile 'org.junit.jupiter:junit-jupiter-api:5.6.2'
    testCompile 'org.junit.jupiter:junit-jupiter-engine:5.6.2'
    compileOnly 'org.projectlombok:lombok:1.18.12'
    annotationProcessor 'org.projectlombok:lombok:1.18.12'
}

test {
    useJUnitPlatform()
}

test {
    finalizedBy jacocoTestReport
}

jacoco {
    toolVersion = '0.8.5'
}

jacocoTestReport {
    dependsOn test

    reports {
        html.enabled true
        xml.enabled false
        csv.enabled false

        html.destination file("$buildDir/jacocoHtml")
    }

    afterEvaluate {
        classDirectories.from = files(classDirectories.files.collect {
            fileTree(
                    dir: it,
                    exclude: [
                            "jp/co/canon/ckbs/eec/fs/configuration/legacy/toolinfo"
                    ])
        })
    }
}